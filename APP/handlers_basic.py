from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

import APP.keyboards as kb
import APP.database.requests as rq
from APP.classes import UserDelete

router_basic = Router()


MESSAGES = {
    "help": "Help message!",
    "no_users": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
    "select_action": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    "select_edit": "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å"
}

def format_user(user):
    if user['status'] == "–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç":
        return f"{user['id']}. –ò–º—è: {user['name']},\n–°—Ç–∞—Ç—É—Å: {user['status']}\n"
    else:
        return (
            f"{user['id']}. –ò–º—è: {user['name']},\n"
            f"–°—Ç–∞—Ç—É—Å: {user['status']},\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {user['age']},\n"
            f"–ê–¥—Ä–µ—Å: {user['address']},\n"
            f"–ù–æ–º–µ—Ä: {user['number']},\n"
            f"–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {user['previous_work_status']}, {user['previous_work_discription']},\n"
            f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π: {user["comment"]}\n"
        )

@router_basic.message(Command("help"))
async def help(message: Message):
    await message.reply(MESSAGES["help"])

@router_basic.message(F.text == "–û—Ç—á–µ—Çüü¢")
async def report(message: Message):
    users = await rq.get_users()
    if users:
        report_message = "\n".join([format_user(user) for user in users])
    else:
        report_message = MESSAGES["no_users"]
    
    await message.answer(report_message)

@router_basic.message(F.text == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—åüü¢")
async def edit_data(message: Message):
    await message.answer(MESSAGES["select_edit"], reply_markup=kb.edit)

@router_basic.message(F.text == "–£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞üü¢")
async def del_user_start(message: Message, state: FSMContext):
    await state.set_state(UserDelete.id)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—å.")

@router_basic.message(UserDelete.id)
async def del_user(message: Message, state: FSMContext):
    data = await state.update_data(id=message.text)
    await rq.delete_user(data["id"])
    
    await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {data["id"]} —É–¥–∞–ª–µ–Ω.")
    await state.clear()


@router_basic.message(F.text == "–ù–∞ –≥–ª–∞–≤–Ω—É—éüü¢")
async def back(message: Message):
    await message.answer(MESSAGES["select_action"], reply_markup=kb.main)
